programmable_hatches.gt.filtermode=输入过滤 (物品/流体)
programmable_hatches.gt.separate=输入隔离(不可切换)
item.prog_circuit.name=编程器电路(重置)
item.prog_circuit.name.format=编程器电路(%s)
item.prog_circuit.name.tooltip=2
item.prog_circuit.name.tooltip.0=放入GT仓室/单方块机器以设置其虚拟电路板槽位
item.prog_circuit.name.tooltip.1=使用编程器覆盖板使仓室支持此功能
programmable_hatches.gt.buffer=%s号缓存
programmable_hatches.gt.lockbuffer=当缓存为空时自动解锁配方
itemGroup.proghatches=可编程仓室
programmable_hatches.prog_cover=编程覆盖板 (目前用0号电路板代替)
programmable_hatches.gt.program=编程器模式
item.prog_circuit.name.tooltip.warn=你为什么要把这东西放进提供器？§c千万不要合成这个物品! 否则...
item.prog_toolkit.name=编程工具箱 MK.II
item.prog_toolkit.name.tooltip=5
item.prog_toolkit.name.tooltip.0=将该物品放入背包物品栏
item.prog_toolkit.name.tooltip.1=携带该物品时 使用NEI一键编写样板
item.prog_toolkit.name.tooltip.2=会将输入中不消耗的物品(带NC标志)
item.prog_toolkit.name.tooltip.3=自动转换为对应的§f编程器电路
item.prog_toolkit.name.tooltip.4=shift右键切换模式
item.prog_toolkit.name.tooltip.mode.0=禁用
item.prog_toolkit.name.tooltip.mode.1=常规模式
programmable_hatches.cover.smart.io.true=内部 向 外部
programmable_hatches.cover.smart.io.false=外部 向 内部
programmable_hatches.cover.smart.mode.0=映射 o->i
programmable_hatches.cover.smart.mode.1=映射 i->o
programmable_hatches.cover.smart.tips.0=i:内部槽位 o:外部槽位
programmable_hatches.cover.smart.tips.1=使用数学表达式来确定一个多对多槽位映射关系
programmable_hatches.cover.smart.tips.2=非法表达式(比如除以0)或映射的槽位不存在时会被无视
programmable_hatches.cover.smart.info.done=就绪
programmable_hatches.cover.smart.info.target.changed=§4目标变更
programmable_hatches.cover.smart.info.syntax.error=§4语法错误
programmable_hatches.cover.smart.info.validating=验证中
programmable_hatches.cover.smart.info.parsing=分析中
programmable_hatches.cover.smart.info.not.inventory=§4目标非容器
programmable_hatches.cover.smart.info.idle=空闲
programmable_hatches.cover.smart.info.nyc=正在计算
programmable_hatches.cover.smart.info.ftc=??§4(计算失败)
programmable_hatches.cover.smart.info.mode.0=外部槽位 转移方向 内部槽位
programmable_hatches.cover.smart.info.mode.1=内部槽位 转移方向 外部槽位
programmable_hatches.cover.smart.info.gmt=正在生成映射表
programmable_hatches.cover.smart.info.oob=§4(槽位越界)
programmable_hatches.cover.smart.reset=重新计算
item.proghatch.smartarm.name=智能机械臂
item.proghatch.smartarm.name.tooltip.0=每 %1$s 秒转移 %2$s 组物品
item.proghatch.smartarm.name.tooltip.1=用数学表达式来指定夹取与放置的槽位
item.proghatch.smartarm.name.tooltip.2=shift+右键以在聊天栏输出详细用法
item.proghatch.smartarm.name.tooltip=3
programmable_hatches.cover.smart.dyn.0=静态模式
programmable_hatches.cover.smart.dyn.1=动态模式
programmable_hatches.cover.smart.dyn.shift.for.detail=§7按shift查看详细信息
programmable_hatches.cover.smart.dyn.shift.0.0=生成映射表再运行
programmable_hatches.cover.smart.dyn.shift.0.1=§7无法获取动态信息
programmable_hatches.cover.smart.dyn.shift.0.2=§7最小工作间隔: 1 tick
programmable_hatches.cover.smart.dyn.shift.0=3
programmable_hatches.cover.smart.dyn.shift.1.0=运行时计算映射表
programmable_hatches.cover.smart.dyn.shift.1.1=§7允许获取无线红石等信息
programmable_hatches.cover.smart.dyn.shift.1.2=§7最小工作间隔: 5 tick
programmable_hatches.cover.smart.dyn.shift.1=3
programmable_hatches.cover.smart.info.print.dyn=动态模式不生成映射表
item.prog_toolkit.name.tooltip.mode.2=无NC物品时添加空编程器电路
programmable_hatches.cover.wireless.invert.true=反转信号
programmable_hatches.cover.wireless.safe.true=安全模式启用
programmable_hatches.cover.wireless.crashed.true=禁用
programmable_hatches.cover.wireless.uuidsource.false=使用覆盖板放置者UUID
programmable_hatches.cover.wireless.invert.false=不反转信号
programmable_hatches.cover.wireless.private.false=公共频道
programmable_hatches.cover.wireless.safe.false=安全模式关闭
programmable_hatches.cover.wireless.crashed.false=根据信号控制
programmable_hatches.cover.wireless.uuidsource.true=使用机器放置者UUID
programmable_hatches.cover.wireless.private.true=私有频道
programmable_hatches.remote.dim=不能跨世界连接
programmable_hatches.remote.fail=连接失败 请确认你使用的是记录了坐标的三录仪
programmable_hatches.remote.blacklisted=连接失败 目标被列入黑名单以阻止无穷循环访问
programmable_hatches.remote.success=连接成功
programmable_hatches.remote.unlinked=未连接
programmable_hatches.remote.chunk=目标区块未被加载
programmable_hatches.remote.nothing=目标不是TileEntity
programmable_hatches.remote.dummytarget=目标不是容器
programmable_hatches.remote.ok=工作正常
programmable_hatches.remote.detach=连接已清除
programmable_hatches.cover.smart.desc.0=二元运算:
programmable_hatches.cover.smart.desc.1=+ - * / % > >= < <= !=
programmable_hatches.cover.smart.desc.2=三元运算:
programmable_hatches.cover.smart.desc.3=condition?ifTrue:ifFalse
programmable_hatches.cover.smart.desc.4=函数:
programmable_hatches.cover.smart.desc.5=min(a,b,c...) max(a,b,c...)
programmable_hatches.cover.smart.desc.6=--计算参数中最小/最大值
programmable_hatches.cover.smart.desc.7=enabled() §7*仅在动态模式可用
programmable_hatches.cover.smart.desc.8=--获取机器加工状态
programmable_hatches.cover.smart.desc.9=--0:禁用 1:启用
programmable_hatches.cover.smart.desc.10=redstone(freq,0) §7*仅在动态模式可用
programmable_hatches.cover.smart.desc.11=--获取GT公共无线红石,范围0~15
programmable_hatches.cover.smart.desc.12=redstone(freq,1) §7*仅在动态模式可用
programmable_hatches.cover.smart.desc.13=--获取GT私有无线红石,范围0~15
programmable_hatches.cover.smart.desc=14
item.proghatch.cover.dedicated.0=编程器覆盖板
item.proghatch.cover.dedicated.1=无线控制覆盖板
programmable_hatches.cover.wireless.gatemode.0=AND
programmable_hatches.cover.wireless.gatemode.1=NAND
programmable_hatches.cover.wireless.gatemode.2=OR
programmable_hatches.cover.wireless.gatemode.3=NOR
programmable_hatches.cover.wireless.gatemode.4=SINGLE
item.proghatch.oc.redstone.bind=UUID成功绑定
item.proghatches.oc.redstone.name=GT高级无线红石卡
item.proghatches.oc.api.name=物品API卡
item.proghatches.oc.redstone.tooltip.0=让OC能够访问GT高级无线红石,而不是只有5000个公共频道的WR-CBE
item.proghatches.oc.redstone.tooltip.1=右键绑定你的UUID后才能访问私有频道
item.proghatches.oc.redstone.tooltip.2=等级 1
item.proghatches.oc.redstone.tooltip=3
item.proghatches.oc.api.tooltip.0=提供矿典访问和物品数字ID和字符串ID的转换
item.proghatches.oc.api.tooltip.1=等级 1
item.proghatches.oc.api.tooltip=2
programmable_hatches.cover.smart.probe=测试
programmable_hatches.cover.smart.probe.move=移动§4探针
item.prog_toolkit.name.tooltip.emptyinput=如果要自动化生产,请使用编程器电路提供器
programmable_hatches.tutorial=可编程仓室--从入门到精通
programmable_hatches.tutorial.pages.0=编程器电路与编程器覆盖板\n\n编程器电路与编程器覆盖板的关系正如流体封包和封包解码器的关系。编程器电路记录了一个特定物品，编程器覆盖板会自动把这个物品写入虚拟电路板槽并移除编程器电路。这个机制旨在解决含有不消耗物品的合成自动化。
programmable_hatches.tutorial.pages.1=你可以将编程器覆盖板贴在单方块机器或是输入总线上。本模组的一些仓室自带编程器覆盖板功能。你只需要将编程器电路写入AE2的样板中，就能在避免混配方的情况下用单个机器处理所有的配方。此外，编程器电路不止能设置编程电路(包括GT++与Bartworks的电路)，铸模、模头和透镜等不消耗物品也能被覆盖板写入虚拟电路板槽。
programmable_hatches.tutorial.pages.2=编程器电路提供器\n\n编程器电路提供器可以连入AE网络，占用一个频道。连入后向网络提供编程器电路的合成，其类型取决于其GUI中放置的物品。合成是免费(或者说不消耗AE能量以外的资源)，瞬间完成，且不限数量(实际取决于你的并行核数)的。
programmable_hatches.tutorial.pages.3=一个提供器只能提供一种编程器电路，所以你可能需要使用多个提供器。提供器GUI的格子不能通过NEI书签标记来指定，你需要把编程电路留在格子里，所以至少要做出一个实际的物品，也就是说你不能借此跳过某些复杂的催化剂生产。
programmable_hatches.tutorial.pages.4=编程工具箱 MK.II\n\n玩家背包携此物品时，在样板终端使用NEI一键编码功能时，自动将不消耗物品(NC标志)转化为编程器电路以标记样板，而不是直接忽略它。暂不支持无线样板终端。
programmable_hatches.tutorial.pages.5=不推荐同时携带多个工具箱，可能导致无法正常运作。shift右键可以切换模式，模式3中，如果配方不含NC物品，会补上一个空的编程器电路，这种空电路可以重置虚拟电路板槽，以免先前的非空编程器电路造成干扰混配方。此外，直接右键可以打开GUI手动生成编程器电路用于调试。
programmable_hatches.tutorial.pages.6=编程二合一输入仓\n\n你也可以叫它编程输入总成，怎样都好\n自带编程覆盖板功能，带有类似样板输入总成的输入隔离。使用方法是连接开启阻挡模式的ME接口，配合带编程器电路的样板，就能用单个仓室在不混配方的情况下为机器提供多种配方的输入。
programmable_hatches.tutorial.pages.7=缓存编程二合一输入仓\n\n如果不关心它的具体工作方式，你只需要知道使用方法和前面的基础版本完全一致(是的，你依然需要打开阻挡模式)，只是更快，还能充分利用机器的并行。
programmable_hatches.tutorial.pages.8=缓存版本的编程二合一输入仓，主GUI中的物品/流体称为“输入区”，机器只能访问“缓存区”种的材料。当缓存区没有锁定配方，AE会发配一组材料并被阻挡，这些原料会在下一tick被转移进入缓存区并记录锁定单组材料的内容。当输入区的内容和某个缓存区锁定的配方顺序与数量完全一致，会被瞬间转移到缓存区。
programmable_hatches.tutorial.pages.9=这样，即使开启阻挡模式，AE发配完一组原料后，不会因为阻挡模式停止发配。因此只需要2tick就能将原料全部发配给机器待用(如果AE有足够多并行)。每个缓存区(进阶版的有多个)内部附带编程器覆盖板功能，且有4个额外的虚拟槽，用于处理含多个不消耗物品的配方。每个缓存区也是互相输入隔离的。
programmable_hatches.tutorial.pages.10=注意，缓存编程二合一输入仓的输入区没有编程覆盖板功能(即使手动贴覆盖板也一样)，输入区的虚拟电路板是方便九合一加工厂指定类型用的，被每个缓存区共享。缓存区的容量会在tooltips中标注，允许超出容量，但超出后该缓存区会停止工作。
programmable_hatches.tutorial.pages.11=右上角的“电源”按钮控制机器是否向“缓存区”转移材料，你可以关掉它，然后手动塞入一份材料再打开，这样缓冲区才能正确记录你的配方。
programmable_hatches.tutorial.pages.12=无线控制覆盖板&智能机械臂&GT高级无线红石卡\n\n这些物品所访问的都是GT高级无线红石系统，是的，它们不兼容基础版的GT无线红石。
programmable_hatches.tutorial.pages=13
item.proghatch.cover.dedicated.tooltips.1.0=带有安全模式的红石接收覆盖板(内)
item.proghatch.cover.dedicated.tooltips.1=1
item.proghatch.cover.dedicated.tooltips.0=0
programmable_hatches.gt.marking.slot.0=§7使用物品标记,不支持NEI书签
programmable_hatches.gt.marking.slot.1=§7点击清空
programmable_hatches.gt.pattern=添加样板
programmable_hatches.buffer.waila.000=§n§e警告:手动塞入的物品无法被锁定
programmable_hatches.buffer.waila.001=§n§e警告:手动塞入的物品无法被锁定
programmable_hatches.buffer.waila.010=§2就绪
programmable_hatches.buffer.waila.011=§n§f意外状态:空标志和满标志同时成立
programmable_hatches.buffer.waila.100=§4锁定
programmable_hatches.buffer.waila.101=§e已满
programmable_hatches.buffer.waila.110.0=§e锁定|空
programmable_hatches.buffer.waila.110.1=§n§f意外状态:无法自动解锁配方
programmable_hatches.buffer.waila.111=§n§f意外状态:空标志和满标志同时成立
programmable_hatches.buffer.waila.present=锁定的配方:
programmable_hatches.buffer.waila.copies=§f可能的份数:%s
programmable_hatches.buffer.waila.broken=§e非锁定配方的整数倍
tile.proghatch.iohub.name=IO枢纽
tile.iohub.tooltip.shift.0=集成功能:
tile.iohub.tooltip.shift.1=物品栏升级
tile.iohub.tooltip.shift.2=物品栏控制升级
tile.iohub.tooltip.shift.3=水箱升级
tile.iohub.tooltip.shift.4=水箱控制升级
tile.iohub.tooltip.shift.5=ME升级
tile.iohub.tooltip.shift.6=转运器
tile.iohub.tooltip.shift.7=机器人(仅部分功能)
tile.iohub.tooltip.shift.8=注意:me升级的"store"函数被重命名为"storeAE"
tile.iohub.tooltip.shift.9=因为和物品栏升级提供的"store"函数冲突
tile.iohub.tooltip.shift=10
tile.iohub.tooltip.0=为OC计算机提供便捷的AE2网络访问
tile.iohub.tooltip.1=类似一个安装了ME升级的不可移动机器人
tile.iohub.tooltip.2=但没有独立CPU,通过OC线缆接受OC计算机控制
tile.iohub.tooltip.3=无需安全终端,直接使用AE线缆链接网络
tile.iohub.tooltip.4=32 物品栏+8 流体
tile.iohub.tooltip.5=按 [SHIFT] 获取更多信息
tile.iohub.tooltip=6
item.proghatches.oc.peripheral_card.name=无线外设桥接卡
tile.proghatch.peripheral_station.name=无线外设驱动站
item.proghatches.oc.peripheral_card.tooltip.unbound=未绑定
item.proghatches.oc.peripheral_card.tooltip.bad=失效: 需要复位 这通常是尝试多对一连接导致的
item.proghatches.oc.peripheral_card.tooltip.valid=频道: %s
tile.proghatches.oc.peripheral_station.waila.channel=频道: %s
tile.proghatches.oc.peripheral_station.waila.connection=连接状态: %s
tile.proghatches.oc.peripheral_station.waila.connection.true=true
tile.proghatches.oc.peripheral_station.waila.connection.false=false
tile.proghatches.oc.peripheral_station.waila.connection.out_of_range=超出信号范围
tile.proghatches.oc.peripheral_station.waila.connection.more_than_one=错误:无法在有多于一个计算机的网络中工作 使用扳手复位
item.proghatches.oc.peripheral_card.tooltip.0=右键外设驱动站以绑定
item.proghatches.oc.peripheral_card.tooltip.1=Shift右键以复位
item.proghatches.oc.peripheral_card.tooltip.2=可以安装在任何卡槽内(不限于机箱)
item.proghatches.oc.peripheral_card.tooltip.3=不占用组件数量
item.proghatches.oc.peripheral_card.tooltip=4
tile.proghatches.peripheral_station.tooltip.0=驱动连接的机器,并对安装了无线外设桥接卡的电脑提供组件访问
tile.proghatches.peripheral_station.tooltip.1=无法在有多个电脑的网络中工作
tile.proghatches.peripheral_station.tooltip.2=只能和无线外设桥接卡建立一对一的连接
tile.proghatches.peripheral_station.tooltip.3=距离:16格 无法跨维度
tile.proghatches.peripheral_station.tooltip.4=不占用组件数量
tile.proghatches.peripheral_station.tooltip=5
programmable_hatches.gt.updateEveryTick=此模式用于每tick强制触发仓室的转移,以防(由于bug或某些corner case)转移过程未能正确触发 如果仓室工作正常,应该关闭此功能以优化服务器负载,此时开启此功能也不会获得更高的游戏内处理效率
programmable_hatches.addedby=Added by §1ProgrammableHatches§r
programmable_hatches.gt.lang.dir=zh_CN
hatch.input.dual.tier.name=编程二合一输入仓 (%s)
hatch.input.dual.quad.tier.name=编程多流体二合一输入仓 (%s)
hatch.input.buffered.dual.tier.name=编程缓冲二合一输入仓 (%s)
hatch.input.buffered.dual.quad.tier.name=编程缓冲多流体二合一输入仓 (%s)
hatch.input.buffered.dual.quad.tier.mkii.name=进阶编程缓冲多流体二合一输入仓 (%s)
circuitprovider.name=编程器电路提供器
hatch.dualinput.slave.name=二合一输入镜像
hatch.input.item.remote.name=远程输入总线
hatch.input.fluid.remote.name=远程输入仓
hatch.input.buffered.superfluid.name=超级流体二合一输入仓
hatch.input.buffered.me.name=编程样板输入总成
hatch.output.tenacious.name=吝物输出总线 (%s)
hatch.output.filter.name=过滤输出总线 (%s)
recipe_check_result_detector.name=空闲检测器
item.proghatches.eu_upgrade_module.name=电流封包解码卡(WIP)
proghatches.part.tooltip.amp=前方动力仓能提供的期望电流
proghatches.part.tooltip.volt.0=前方动力仓能提供的期望电压
proghatches.part.tooltip.volt.1=电压等级:%s %s
proghatches.part.recycle.false=不自动回收电流封包
proghatches.part.recycle.true=自动回收电流封包
proghatches.part.hint.0=占用的安培数/总安培数
proghatches.part.hint.1=注意:占用的安培数如果不为0时,应当避免更改期望值
proghatches.part.onoff.false=暂停提供封包
proghatches.part.onoff.true=提供封包
item.proghatches.part.eu.source.name=EU源
tile.proghatches.euinterface.name=EU接口
item.eu_token.name=电流封包
item.eu_token.1.name=电流封包(绑定)
proghatches.eu.interface.hint.amp=瞬时/平均(5秒平均)/已分配到电流
proghatches.eu.interface.hint.volt=实际电压(GUI打开后统计的 最小/最大 值)
proghatches.eu.interface.hint=注意:期望电流如果不为0时,应当避免更改期望值
proghatches.eu.interface.tooltip.volt.0=EU接口期望电压
proghatches.eu.interface.tooltip.volt.1=电压等级:%s %s
proghatches.eu.interface.tooltip.amp=EU接口期望电流
item.proghatch.cover.dedicated.2=空闲检测覆盖板
item.proghatch.cover.dedicated.tooltips.2.0=放在任意输入仓室或单方块机器上以使其获得空闲检测器功能.
item.proghatch.cover.dedicated.tooltips.2.1=不阻隔此面物品/流体/能量交互.
item.proghatch.cover.dedicated.tooltips.2.2=也能检测单方块机器.
item.proghatch.cover.dedicated.tooltips.2.3=当多方块机器由于未找到配方从工作状态停机时,发射1tick红石信号
item.proghatch.cover.dedicated.tooltips.2.4=红石线无法传递1tick脉冲?试试红石P2P或者红石导管吧！
item.proghatch.cover.dedicated.tooltips.2=5
itemGroup.proghatches.eucrafting=可编程仓室|EU合成
item.proghatches.euinterface.p2p.name=P2P - EU接口
proghatches.eucreafting.finish.false=等待红石脉冲...
proghatches.eucreafting.finish.true=准备归还电流封包
proghatches.eucreafting.p2p.connection=无法访问输入端
programmable_hatches.eucreafting.tutorial.pages.0=EU合成套件致力于通过按需供电，并在供能不足时阻塞配方，解决前期供能有限导致的跳电问题。/n只需要保证提供恒定的电流，无需担心大量高功率机器瞬间运作，导致储能足够但输出电流不足。
programmable_hatches.eucreafting.tutorial.pages.1=电流封包\n\n一个电流封包代表了某个电压的1A电流，你不能直接获取这个物品，这个物品也不能(像流体封包解码器处理流体封包一样)直接转化成EU，它只用于表示电流的需求和产能，实际能量传递由AE元件完成。
programmable_hatches.eucreafting.tutorial.pages.2=EU源\n\n以提供电流封包的合成方式，向AE网络提供GTEU\n右键打开GUI以设置其期望电压以及最大的电流提供能力\n每通过合成CPU请求一个电流封包，EU源就增加1A的电流提供能力。当请求的封包数量大于最大的电流，合成会被阻塞直到封包被回收。
programmable_hatches.eucreafting.tutorial.pages.3=只要在网络中有对应电压的封包，EU源就会回收它。\n无需担心，如果合成尚未结束，电流封包实际存储在合成CPU中，在合成结束后才会进入AE存储网络。\n注意:如果GUI中设置的数据与实际不符，在使用中就会造成跳电，甚至过压爆炸。
programmable_hatches.eucreafting.tutorial.pages.4=EU接口\n\n拥有二合一接口的所有功能，并且能够连接入GT电网，按需从EU源获取EU为GT机器供能\n右键打开二合一接口GUI，Shift+右键打开EU设置，同样需要设置期望电压和期望电流，这通常等于能源仓的属性(单仓1A,双仓4A)，对于单方块机器通常是1A。
programmable_hatches.eucreafting.tutorial.pages.5=设置完毕后，通过终端能观察到 电流封包(绑定)的合成，这个是用于将EU源提供的电流绑定到这个EU接口的。电流封包(绑定)记录了这个EU接口的UUID，不同EU接口产生的电流封包(绑定)是不同的，且不会被EU源回收。
programmable_hatches.eucreafting.tutorial.pages.6=此时放入编码样板，编码样板被EU接口读取后，向AE提供数据时输入和输出都会被加上N个电流封包(绑定)，其中N数值上等于期望电流(样板本身不变)。实际合成时电流封包不会进入目标容器，而是立刻返回AE存储，而EU接口会记录下电流封包的数量，从EU源提取对应安培电流。
programmable_hatches.eucreafting.tutorial.pages.7=最后，如果机器工作完毕，需要发出一个红石脉冲到EU接口，EU接口会将绑定的电流封包解绑，EU源检测到后就能回收。这个红石信号可以由空闲检测器/覆盖板完成实现自动化。
programmable_hatches.eucreafting.tutorial.pages.8=空闲检测器/覆盖板\n\n当机器从工作状态停止时瞬间，发送一个1tick脉冲给EU接口，使其释放占用的电流封包。\n原版红石线无法传递1tick信号，请不要使用它。
programmable_hatches.eucreafting.tutorial.pages.9=P2P - EU接口\n\nEU接口没有面板形式，因为没有GT仓室能同时从一个面交互物品、能量和红石信号。(尽管单方块机器能做到这一点)\nP2P - EU接口能解决这个问题，它的使用和P2P - ME二合一接口类似，
programmable_hatches.eucreafting.tutorial.pages.10=需要内存卡将一个输入绑定到多个输出，你可以从任一P2P输出能量，也可以从任一P2P接受红石脉冲。Shift+右键P2P输入端打开EU设置，输出端P2P没有独立的EU设置GUI，试图打开它会转跳到输入端。
programmable_hatches.eucreafting.tutorial.pages.11=特别说明：设置的电压实际上更类似于“频道”，不是真实的限制，最好但不必等于真实电压，EU合成系统也不会不加检查地将真实电压传递到EU接口。设置的电流是真实的，EU源无法提供高于其期望电流的电流，即使实际电源供能能力更高，EU接口获取的电流不会高于期望电流，即使EU源提供的电流尚有盈余。
programmable_hatches.eucreafting.tutorial.pages=12
programmable_hatches.eucreafting.tutorial=EU合成套件(WIP)
proghatches.eu.interface.waila.UUID=UUID: %s
proghatches.eu.interface.waila.UUID.out.0=输入P2P信息:
proghatches.eu.interface.waila.UUID.out.1= UUID: %1$s 
proghatches.eu.interface.waila.UUID.out.2= 坐标:[%2$d,%3$d,%4$d] 
proghatches.eu.interface.waila.UUID.out.3= 所在维度:%5$d
