programmable_hatches.gt.filtermode=输入过滤 (物品/流体)
programmable_hatches.gt.separate=输入隔离(不可切换)
item.prog_circuit.name=编程器电路(重置)
item.prog_circuit.name.format=编程器电路(%s)
item.prog_circuit.name.tooltip=2
item.prog_circuit.name.tooltip.0=放入GT仓室/单方块机器以设置其虚拟电路板槽位
item.prog_circuit.name.tooltip.1=使用编程器覆盖板使仓室支持此功能
programmable_hatches.gt.buffer=%s号缓存
programmable_hatches.gt.lockbuffer=当缓存为空时自动解锁配方
itemGroup.proghatches=可编程仓室
programmable_hatches.prog_cover=编程覆盖板 (目前用0号电路板代替)
programmable_hatches.gt.program=编程器模式
item.prog_circuit.name.tooltip.warn=你为什么要把这东西放进提供器？§c千万不要合成这个物品! 否则...
item.prog_toolkit.name=编程工具箱 MK.II
item.prog_toolkit.name.tooltip=5
item.prog_toolkit.name.tooltip.0=将该物品放入背包物品栏
item.prog_toolkit.name.tooltip.1=携带该物品时 使用NEI一键编写样板
item.prog_toolkit.name.tooltip.2=会将输入中不消耗的物品(带NC标志)
item.prog_toolkit.name.tooltip.3=自动转换为对应的§f编程器电路
item.prog_toolkit.name.tooltip.4=shift右键切换模式
item.prog_toolkit.name.tooltip.mode.0=禁用
item.prog_toolkit.name.tooltip.mode.1=常规模式
programmable_hatches.cover.smart.io.true=内部 向 外部
programmable_hatches.cover.smart.io.false=外部 向 内部
programmable_hatches.cover.smart.mode.0=映射 o->i
programmable_hatches.cover.smart.mode.1=映射 i->o
programmable_hatches.cover.smart.tips.0=i:内部槽位 o:外部槽位
programmable_hatches.cover.smart.tips.1=使用数学表达式来确定一个多对多槽位映射关系
programmable_hatches.cover.smart.tips.2=非法表达式(比如除以0)或映射的槽位不存在时会被无视
programmable_hatches.cover.smart.info.done=就绪
programmable_hatches.cover.smart.info.target.changed=§4目标变更
programmable_hatches.cover.smart.info.syntax.error=§4语法错误
programmable_hatches.cover.smart.info.validating=验证中
programmable_hatches.cover.smart.info.parsing=分析中
programmable_hatches.cover.smart.info.not.inventory=§4目标非容器
programmable_hatches.cover.smart.info.idle=空闲
programmable_hatches.cover.smart.info.nyc=正在计算
programmable_hatches.cover.smart.info.ftc=??§4(计算失败)
programmable_hatches.cover.smart.info.mode.0=外部槽位 转移方向 内部槽位
programmable_hatches.cover.smart.info.mode.1=内部槽位 转移方向 外部槽位
programmable_hatches.cover.smart.info.gmt=正在生成映射表
programmable_hatches.cover.smart.info.oob=§4(槽位越界)
programmable_hatches.cover.smart.reset=重新计算
item.proghatch.smartarm.name=智能机械臂
item.proghatch.smartarm.name.tooltip.0=每 %1$s 秒转移 %2$s 组物品
item.proghatch.smartarm.name.tooltip.1=用数学表达式来指定夹取与放置的槽位
item.proghatch.smartarm.name.tooltip.2=shift+右键以在聊天栏输出详细用法
item.proghatch.smartarm.name.tooltip=3
programmable_hatches.cover.smart.dyn.0=静态模式
programmable_hatches.cover.smart.dyn.1=动态模式
programmable_hatches.cover.smart.dyn.shift.for.detail=§7按shift查看详细信息
programmable_hatches.cover.smart.dyn.shift.0.0=生成映射表再运行
programmable_hatches.cover.smart.dyn.shift.0.1=§7无法获取动态信息
programmable_hatches.cover.smart.dyn.shift.0.2=§7最小工作间隔: 1 tick
programmable_hatches.cover.smart.dyn.shift.0=3
programmable_hatches.cover.smart.dyn.shift.1.0=运行时计算映射表
programmable_hatches.cover.smart.dyn.shift.1.1=§7允许获取无线红石等信息
programmable_hatches.cover.smart.dyn.shift.1.2=§7最小工作间隔: 5 tick
programmable_hatches.cover.smart.dyn.shift.1=3
programmable_hatches.cover.smart.info.print.dyn=动态模式不生成映射表
item.prog_toolkit.name.tooltip.mode.2=无NC物品时添加空编程器电路
programmable_hatches.cover.wireless.invert.true=反转信号
programmable_hatches.cover.wireless.safe.true=安全模式启用
programmable_hatches.cover.wireless.crashed.true=禁用
programmable_hatches.cover.wireless.uuidsource.false=使用覆盖板放置者UUID
programmable_hatches.cover.wireless.invert.false=不反转信号
programmable_hatches.cover.wireless.private.false=公共频道
programmable_hatches.cover.wireless.safe.false=安全模式关闭
programmable_hatches.cover.wireless.crashed.false=根据信号控制
programmable_hatches.cover.wireless.uuidsource.true=使用机器放置者UUID
programmable_hatches.cover.wireless.private.true=私有频道
programmable_hatches.remote.dim=不能跨世界连接
programmable_hatches.remote.fail=连接失败 请确认你使用的是记录了坐标的三录仪
programmable_hatches.remote.blacklisted=连接失败 目标被列入黑名单以阻止无穷循环访问
programmable_hatches.remote.success=连接成功
programmable_hatches.remote.unlinked=未连接
programmable_hatches.remote.chunk=目标区块未被加载
programmable_hatches.remote.nothing=目标不是TileEntity
programmable_hatches.remote.dummytarget=目标不是容器
programmable_hatches.remote.ok=工作正常
programmable_hatches.remote.detach=连接已清除
programmable_hatches.cover.smart.desc.0=二元运算:
programmable_hatches.cover.smart.desc.1=+ - * / % > >= < <= !=
programmable_hatches.cover.smart.desc.2=三元运算:
programmable_hatches.cover.smart.desc.3=condition?ifTrue:ifFalse
programmable_hatches.cover.smart.desc.4=函数:
programmable_hatches.cover.smart.desc.5=min(a,b,c...) max(a,b,c...)
programmable_hatches.cover.smart.desc.6=--计算参数中最小/最大值
programmable_hatches.cover.smart.desc.7=enabled() §7*仅在动态模式可用
programmable_hatches.cover.smart.desc.8=--获取机器加工状态
programmable_hatches.cover.smart.desc.9=--0:禁用 1:启用
programmable_hatches.cover.smart.desc.10=redstone(freq,0) §7*仅在动态模式可用
programmable_hatches.cover.smart.desc.11=--获取GT公共无线红石,范围0~15
programmable_hatches.cover.smart.desc.12=redstone(freq,1) §7*仅在动态模式可用
programmable_hatches.cover.smart.desc.13=--获取GT私有无线红石,范围0~15
programmable_hatches.cover.smart.desc=14
item.proghatch.cover.dedicated.0=编程器覆盖板
item.proghatch.cover.dedicated.1=无线控制覆盖板
programmable_hatches.cover.wireless.gatemode.0=AND
programmable_hatches.cover.wireless.gatemode.1=NAND
programmable_hatches.cover.wireless.gatemode.2=OR
programmable_hatches.cover.wireless.gatemode.3=NOR
programmable_hatches.cover.wireless.gatemode.4=SINGLE
item.proghatch.oc.redstone.bind=UUID成功绑定
item.proghatches.oc.redstone.name=GT高级无线红石卡
item.proghatches.oc.api.name=物品API卡
item.proghatches.oc.redstone.tooltip.0=让OC能够访问GT高级无线红石,而不是只有5000个公共频道的WR-CBE
item.proghatches.oc.redstone.tooltip.1=右键绑定你的UUID后才能访问私有频道
item.proghatches.oc.redstone.tooltip.2=等级 1
item.proghatches.oc.redstone.tooltip=3
item.proghatches.oc.api.tooltip.0=提供矿典访问和物品数字ID和字符串ID的转换
item.proghatches.oc.api.tooltip.1=等级 1
item.proghatches.oc.api.tooltip=2
programmable_hatches.cover.smart.probe=测试
programmable_hatches.cover.smart.probe.move=移动§4探针
item.prog_toolkit.name.tooltip.emptyinput=如果要自动化生产,请使用编程器电路提供器
programmable_hatches.tutorial=可编程仓室--从入门到精通
programmable_hatches.tutorial.pages.0=编程器电路与编程器覆盖板\n\n编程器电路与编程器覆盖板的关系正如流体封包和封包解码器的关系。编程器电路记录了一个特定物品,编程器覆盖板会自动把这个物品写入虚拟电路板槽并移除编程器电路。这个机制旨在解决含有不消耗物品的合成自动化。
programmable_hatches.tutorial.pages.1=你可以将编程器覆盖板贴在单方块机器或是输入总线上。本模组的一些仓室自带编程器覆盖板功能。你只需要将编程器电路写入AE2的样板中,就能在避免混配方的情况下用单个机器处理所有的配方。此外,编程器电路不止能设置编程电路(包括GT++与Bartworks的电路),铸模、模头和透镜等不消耗物品也能被覆盖板写入虚拟电路板槽。
programmable_hatches.tutorial.pages.2=编程器电路提供器\n\n编程器电路提供器可以连入AE网络,占用一个频道。连入后向网络提供编程器电路的合成,其类型取决于其GUI中放置的物品。合成是免费(或者说不消耗AE能量以外的资源),瞬间完成,且不限数量(实际取决于你的并行核数)的。
programmable_hatches.tutorial.pages.3=一个提供器只能提供一种编程器电路,所以你可能需要使用多个提供器。提供器GUI的格子不能通过NEI书签标记来指定,你需要把编程电路留在格子里,所以至少要做出一个实际的物品,也就是说你不能借此跳过某些复杂的催化剂生产。
programmable_hatches.tutorial.pages.4=编程工具箱 MK.II\n\n玩家背包携此物品时,在样板终端使用NEI一键编码功能时,自动将不消耗物品(NC标志)转化为编程器电路以标记样板,而不是直接忽略它。暂不支持无线样板终端。
programmable_hatches.tutorial.pages.5=不推荐同时携带多个工具箱,可能导致无法正常运作。shift右键可以切换模式,模式3中,如果配方不含NC物品,会补上一个空的编程器电路,这种空电路可以重置虚拟电路板槽,以免先前的非空编程器电路造成干扰混配方。此外,直接右键可以打开GUI手动生成编程器电路用于调试。
programmable_hatches.tutorial.pages.6=编程二合一输入仓\n\n你也可以叫它编程输入总成,怎样都好\n自带编程覆盖板功能,带有类似样板输入总成的输入隔离。使用方法是连接开启阻挡模式的ME接口,配合带编程器电路的样板,就能用单个仓室在不混配方的情况下为机器提供多种配方的输入。
programmable_hatches.tutorial.pages.7=缓存编程二合一输入仓\n\n如果不关心它的具体工作方式,你只需要知道使用方法和前面的基础版本完全一致(是的,你依然需要打开阻挡模式),只是更快,还能充分利用机器的并行。
programmable_hatches.tutorial.pages.8=缓存版本的编程二合一输入仓,主GUI中的物品/流体称为“输入区”,机器只能访问“缓存区”种的材料。当缓存区没有锁定配方,AE会发配一组材料并被阻挡,这些原料会在下一tick被转移进入缓存区并记录锁定单组材料的内容。当输入区的内容和某个缓存区锁定的配方顺序与数量完全一致,会被瞬间转移到缓存区。
programmable_hatches.tutorial.pages.9=这样,即使开启阻挡模式,AE发配完一组原料后,不会因为阻挡模式停止发配。因此只需要2tick就能将原料全部发配给机器待用(如果AE有足够多并行)。每个缓存区(进阶版的有多个)内部附带编程器覆盖板功能,且有4个额外的虚拟槽,用于处理含多个不消耗物品的配方。每个缓存区也是互相输入隔离的。
programmable_hatches.tutorial.pages.10=注意,缓存编程二合一输入仓的输入区没有编程覆盖板功能(即使手动贴覆盖板也一样),输入区的虚拟电路板是方便九合一加工厂指定类型用的,被每个缓存区共享。缓存区的容量会在tooltips中标注,允许超出容量,但超出后该缓存区会停止工作。
programmable_hatches.tutorial.pages.11=右上角的“电源”按钮控制机器是否向“缓存区”转移材料,你可以关掉它,然后手动塞入一份材料再打开,这样缓冲区才能正确记录你的配方。
programmable_hatches.tutorial.pages.12=无线控制覆盖板&智能机械臂&GT高级无线红石卡\n\n这些物品所访问的都是GT高级无线红石系统,是的,它们不兼容基础版的GT无线红石。
programmable_hatches.tutorial.pages=13
item.proghatch.cover.dedicated.tooltips.1.0=带有安全模式的红石接收覆盖板(内)
item.proghatch.cover.dedicated.tooltips.1=1
item.proghatch.cover.dedicated.tooltips.0=0
programmable_hatches.gt.marking.slot.0=§7使用物品标记,不支持NEI书签
programmable_hatches.gt.marking.slot.1=§7点击清空
programmable_hatches.gt.pattern=添加样板
programmable_hatches.buffer.waila.000=§n§e警告:手动塞入的物品无法被锁定
programmable_hatches.buffer.waila.001=§n§e警告:手动塞入的物品无法被锁定
programmable_hatches.buffer.waila.010=§2就绪
programmable_hatches.buffer.waila.011=§n§f意外状态:空标志和满标志同时成立
programmable_hatches.buffer.waila.100=§4锁定
programmable_hatches.buffer.waila.101=§e已满
programmable_hatches.buffer.waila.110.0=§e锁定|空
programmable_hatches.buffer.waila.110.1=§n§f意外状态:无法自动解锁配方
programmable_hatches.buffer.waila.111=§n§f意外状态:空标志和满标志同时成立
programmable_hatches.buffer.waila.present=锁定的配方:
programmable_hatches.buffer.waila.copies=§f可能的份数:%s
programmable_hatches.buffer.waila.broken=§e非锁定配方的整数倍
tile.proghatch.iohub.name=IO枢纽
tile.iohub.tooltip.shift.0=集成功能:
tile.iohub.tooltip.shift.1=物品栏升级
tile.iohub.tooltip.shift.2=物品栏控制升级
tile.iohub.tooltip.shift.3=水箱升级
tile.iohub.tooltip.shift.4=水箱控制升级
tile.iohub.tooltip.shift.5=ME升级
tile.iohub.tooltip.shift.6=转运器
tile.iohub.tooltip.shift.7=机器人(仅部分功能)
tile.iohub.tooltip.shift.8=注意:me升级的"store"函数被重命名为"storeAE"
tile.iohub.tooltip.shift.9=因为和物品栏升级提供的"store"函数冲突
tile.iohub.tooltip.shift=10
tile.iohub.tooltip.0=为OC计算机提供便捷的AE2网络访问
tile.iohub.tooltip.1=类似一个安装了ME升级的不可移动机器人
tile.iohub.tooltip.2=但没有独立CPU,通过OC线缆接受OC计算机控制
tile.iohub.tooltip.3=无需安全终端,直接使用AE线缆链接网络
tile.iohub.tooltip.4=32 物品栏+8 流体
tile.iohub.tooltip.5=按 [SHIFT] 获取更多信息
tile.iohub.tooltip=6
item.proghatches.oc.peripheral_card.name=无线外设桥接卡
tile.proghatch.peripheral_station.name=无线外设驱动站
item.proghatches.oc.peripheral_card.tooltip.unbound=未绑定
item.proghatches.oc.peripheral_card.tooltip.bad=失效: 需要复位 这通常是尝试多对一连接导致的
item.proghatches.oc.peripheral_card.tooltip.valid=频道: %s
tile.proghatches.oc.peripheral_station.waila.channel=频道: %s
tile.proghatches.oc.peripheral_station.waila.connection=连接状态: %s
tile.proghatches.oc.peripheral_station.waila.connection.true=true
tile.proghatches.oc.peripheral_station.waila.connection.false=false
tile.proghatches.oc.peripheral_station.waila.connection.out_of_range=超出信号范围
tile.proghatches.oc.peripheral_station.waila.connection.more_than_one=错误:无法在有多于一个计算机的网络中工作 使用扳手复位
item.proghatches.oc.peripheral_card.tooltip.0=右键外设驱动站以绑定
item.proghatches.oc.peripheral_card.tooltip.1=Shift右键以复位
item.proghatches.oc.peripheral_card.tooltip.2=可以安装在任何卡槽内(不限于机箱)
item.proghatches.oc.peripheral_card.tooltip.3=不占用组件数量
item.proghatches.oc.peripheral_card.tooltip=4
tile.proghatches.peripheral_station.tooltip.0=驱动连接的机器,并对安装了无线外设桥接卡的电脑提供组件访问
tile.proghatches.peripheral_station.tooltip.1=无法在有多个电脑的网络中工作
tile.proghatches.peripheral_station.tooltip.2=只能和无线外设桥接卡建立一对一的连接
tile.proghatches.peripheral_station.tooltip.3=距离:16格 无法跨维度
tile.proghatches.peripheral_station.tooltip.4=不占用组件数量
tile.proghatches.peripheral_station.tooltip=5
programmable_hatches.gt.updateEveryTick=此模式用于每tick强制触发仓室的转移,以防(由于bug或某些corner case)转移过程未能正确触发 如果仓室工作正常,应该关闭此功能以优化服务器负载,此时开启此功能也不会获得更高的游戏内处理效率
programmable_hatches.addedby=Added by §1ProgrammableHatches§r
programmable_hatches.gt.lang.dir=zh_CN
hatch.input.dual.tier.name=编程二合一输入仓 (%s)
hatch.input.dual.quad.tier.name=编程多流体二合一输入仓 (%s)
hatch.input.buffered.dual.tier.name=编程缓冲二合一输入仓 (%s)
hatch.input.buffered.dual.quad.tier.name=编程缓冲多流体二合一输入仓 (%s)
hatch.input.buffered.dual.quad.tier.mkii.name=进阶编程缓冲多流体二合一输入仓 (%s)
circuitprovider.name=编程器电路提供器 (T1)
circuitprovider.name.tech0=编程器电路提供器 (T0)
hatch.dualinput.slave.name=二合一输入镜像
hatch.input.item.remote.name=远程输入总线
hatch.input.fluid.remote.name=远程输入仓
hatch.input.buffered.superfluid.name=超级流体二合一输入仓
hatch.input.buffered.me.name=编程样板输入总成
hatch.output.tenacious.name=吝物输出总线 (%s)
hatch.output.filter.name=过滤输出总线 (%s)
recipe_check_result_detector.name=空闲检测器
item.proghatches.eu_upgrade_module.name=电流封包解码卡(WIP)
proghatches.part.tooltip.amp=前方动力仓能提供的期望电流
proghatches.part.tooltip.volt.0=前方动力仓能提供的期望电压
proghatches.part.tooltip.volt.1=电压等级:%s %s
proghatches.part.recycle.false=不自动回收电流封包
proghatches.part.recycle.true=自动回收电流封包
proghatches.part.hint.0=占用的安培数/总安培数
proghatches.part.hint.1=注意:占用的安培数如果不为0时,应当避免更改期望值
proghatches.part.onoff.false=暂停提供封包
proghatches.part.onoff.true=提供封包
item.proghatches.part.eu.source.name=EU源
tile.proghatches.euinterface.name=EU接口
item.eu_token.name=电流封包
item.eu_token.1.name=电流封包(绑定)
proghatches.eu.interface.hint.amp=瞬时/采样/已分配到电流
proghatches.eu.interface.hint.volt=实际电压(GUI打开后统计的 最小/最大 值)
proghatches.eu.interface.hint=注意:期望电流如果不为0时,应当避免更改期望值
proghatches.eu.interface.tooltip.volt.0=EU接口期望电压
proghatches.eu.interface.tooltip.volt.1=电压等级:%s %s
proghatches.eu.interface.tooltip.amp=EU接口最大电流
item.proghatch.cover.dedicated.2=空闲检测覆盖板
item.proghatch.cover.dedicated.tooltips.2.0=放在任意输入仓室或单方块机器上以使其获得空闲检测器功能.
item.proghatch.cover.dedicated.tooltips.2.1=不阻隔此面物品/流体/能量交互.
item.proghatch.cover.dedicated.tooltips.2.2=也能检测单方块机器.
item.proghatch.cover.dedicated.tooltips.2.3=当多方块机器由于未找到配方从工作状态停机时,发射1tick红石信号
item.proghatch.cover.dedicated.tooltips.2.4=红石线无法传递1tick脉冲?试试红石P2P或者红石导管吧！
item.proghatch.cover.dedicated.tooltips.2=5
itemGroup.proghatches.eucrafting=可编程仓室|EU合成
item.proghatches.euinterface.p2p.name=P2P - EU接口
proghatches.eucreafting.finish.false=等待红石脉冲...
proghatches.eucreafting.finish.true=准备归还电流封包
proghatches.eucreafting.p2p.connection=无法访问输入端
programmable_hatches.eucreafting.tutorial.pages.0=EU合成套件致力于通过按需供电,并在供能不足时阻塞配方,解决前期在耗电峰值瞬间导致的跳电问题。
programmable_hatches.eucreafting.tutorial.pages.1=电流封包\n\n一个电流封包代表了某个电压的1A电流,用来加在样板输入中,从而在供能不足时阻止原料的发配,并不是真实GTEU的等价物也不能直接转换成GTEU
programmable_hatches.eucreafting.tutorial.pages.2=EU源\n\n真实GTEU输入ME网络的入口。能直接连接电缆或动力仓。\n连入ME网络后,你能在终端看到电流封包的合成,但不能(也不应该)通过合成终端手动下单,它只能被合成系统自动请求。
programmable_hatches.eucreafting.tutorial.pages.3=右键打开GUI以设置其期望电压与期望电流。代表这个EU源所连接电源的供能能力。每被合成系统请求一个对应电压的封包,EU源就能向ME网络提供1A电流,最多提供<期望电流>A的电流。
programmable_hatches.eucreafting.tutorial.pages.4=合成CPU在合成完毕后会将电流封包退回ME存储,EU源会回收ME存储内的封包,释放被占用的电流。
programmable_hatches.eucreafting.tutorial.pages.5=EU接口\n\n二合一接口,兼任GTEU的输出口。除了二合一接口本身的功能,它还能连接电缆,从ME网络接收GTEU为GT机器供电。\nshift+右键打开EU接口配置GUI(不按shift打开二合一接口GUI)
programmable_hatches.eucreafting.tutorial.pages.6=设定期望电压和期望电流,合成时它会从对应电压的EU源请求封包以提取GTEU,如果没有空闲的EU源以提供封包,配方会被阻塞。
programmable_hatches.eucreafting.tutorial.pages.7=电流封包(绑定)\n\n绑定到某个特定EU接口的电流封包,记录了EU接口的UUID,被EU源回收时会释放对应EU接口占用的电流。
programmable_hatches.eucreafting.tutorial.pages.8=它是如何工作的？\nEU源会提供一个虚拟的样板,其输入为空输出为一个电流封包,记为样板①。配置过的EU接口会提供一个虚拟的样板,其输入为一个电流封包输出为一个电流封包(绑定),记为样板②。
programmable_hatches.eucreafting.tutorial.pages.9=同时EU接口还会为每个插入的编码样板输入输出各添加<期望电流>个电流封包(绑定),假设有两个实际样板,记为样板③Ⅰ,③Ⅱ。
programmable_hatches.eucreafting.tutorial.pages.10=这样,对于期望电流是M的EU接口,在合成终端下单X个样板③Ⅰ和Y个样板③Ⅱ时,合成系统就会计算出形如\nM*①->M*②->\n③Ⅰ->...X个③Ⅰ..->③Ⅰ->\n③Ⅱ->...Y个③Ⅱ..->③Ⅱ的合成树。
programmable_hatches.eucreafting.tutorial.pages.11=由于③的输入输出都包含M个电流封包(绑定),封包只需要合成M个,前一个样板的输出就能被作为后面一个的输入。电流封包(绑定)绑定了UUID,不同接口所用的电流封包(绑定)不会被认为是同一种物品,会各自申请封包。
programmable_hatches.eucreafting.tutorial.pages.12=当样板③的输入被提交到EU接口,其中的电流封包(绑定)会被立刻送回合成CPU,其余原料会被正常发配。此时EU接口就会根据电流封包(绑定)的个数从EU源提取对应安培数的GTEU了。仅记录单次样板的电流封包(绑定)个数,重复发配不叠加。
programmable_hatches.eucreafting.tutorial.pages.13=此外,不同于常规样板输入足够就会发配,虚拟样板①和②的发配是惰性执行的,仅在③除了封包外所有材料都齐全时才会实际被执行。
programmable_hatches.eucreafting.tutorial.pages.14=不用理会合成计算器显示的封包合成数量(那个是错误的)。实际只需要足够供单EU接口的电流即可。
programmable_hatches.eucreafting.tutorial.pages.15=提高效率--让渡封包\n\n如果一个样板的输入依赖另一个很慢的配方,那么发配一次后空闲时占据的电流封包就被浪费了。因此,为了解决这个问题,对EU接口产生一个红石信号下降沿就能使其让渡电流封包使用权。无需担心,输入材料再次就绪后会重新自动申请封包。
programmable_hatches.eucreafting.tutorial.pages.16=P2P - EU接口\n\n升级版的P2P - 二合一接口 兼 面板形式的EU接口\n就像一个EU接口的每个面被单独拆开使用一样。需要用内存卡指定一个输出以及多个输出。输出端共享输入端的样板,也能和输入端一样输出电流。与P2P-ME接口一样,只能合成获取,无法被"调谐"。
programmable_hatches.eucreafting.tutorial.pages.17=P2P-EU接口将输入端和所有输出端红石信号取 或运算 后的下降沿作为让渡信号,也就是说,只会在所有P2P的红石信号都下降后再让渡,可以同时与多台机器同时运作。
programmable_hatches.eucreafting.tutorial.pages.18=忙碌检测覆盖版\n\n特化版的机器活跃检测覆盖版\n检测频率为1tick,机器完成工作时产生红石下降沿送给EU接口,即使让渡封包。
programmable_hatches.eucreafting.tutorial.pages.19=如果使用单个EU接口(或者一组配对的P2P - EU接口)同时为多个独立的多方块机器提供合成,需要注意:大机器并不是每tick都查找配方,因此当某个大机器先查找了配方并立刻做完,会导致触发下降沿提前让渡电流,导致其他大机器开机跳电。
programmable_hatches.eucreafting.tutorial.pages.20=解决方法1是开启忙碌检测覆盖版的"检测输入是否非空",那么实际红石信号将是(输入仓不为空||输入总线不为空||机器在工作),从而在机器不检测的tick也能补上红石信号,缺点是如果有实体电路/透镜则无法工作
programmable_hatches.eucreafting.tutorial.pages.21=解决方法2是开启忙碌检测覆盖版的"保持信号5s",因为大机器检测间隔最大5s,将信号延时5s就能补齐不检测的真空期,缺点是速度慢,因为让渡也延时了5s
programmable_hatches.eucreafting.tutorial.pages.22=提醒:这些信号的最小频率是1tick,而非1红石刻(2tick),1tick的红石信号无法被原版红石元件传递!试试红石导管,红石p2p或者project red的红石合金丝吧,这些的响应速度都是1tick的
programmable_hatches.eucreafting.tutorial.pages.23=ME接口覆盖板/ME二合一接口覆盖板\n\n覆盖板版本的ME接口,贴上覆盖板后,这个面就能连接ME线缆接入网络。每个面的覆盖版所属的网络是独立的,如果一个GT机器贴了两个覆盖版,网络也不会穿过这个机器。\n发配的原料会进入被贴的机器,而不是覆盖版对面的机器。
programmable_hatches.eucreafting.tutorial.pages.24=使用方法与面板形式的接口无异,但阉割了物品栏/流体栏,类似高版本的样板供应器。发配的物品会直接进入所贴的GT机器,但返还物品需要另想办法--因为覆盖版没有物品栏。
programmable_hatches.eucreafting.tutorial.pages.25=P2P - ME接口覆盖板/ME二合一接口覆盖板\n\n这是它们的P2P版本\n它们可以和面板形式的P2P使用内存卡互联,但不能作为输入端,也就是说你至少要用一个面板形式的P2P。PS:从技术上说并不是不能做输入,但万一出bug了里面存的样板就会直接弄丢...
programmable_hatches.eucreafting.tutorial.pages.26=P2P - EU接口覆盖板\n\n顾名思义\n它还集成了活跃检测覆盖版功能,就是说你可以直接把它贴在机器主控上,它的配置界面需要不按shift的情况下右键打开。
programmable_hatches.eucreafting.tutorial.pages.27=ME覆盖板\n\n允许ME频道穿过所贴的方块。\n自身可以连接ME线缆,安装后该方块上其余接口覆盖板也会被连入同一个ME网络。\n两个方块的相接面贴上ME覆盖板也能传递频道。\n最多传递8频道。
programmable_hatches.eucreafting.tutorial.pages=28
programmable_hatches.eucreafting.tutorial=EU合成套件(WIP)
proghatches.eu.interface.waila.UUID=UUID: %s
proghatches.eu.interface.waila.UUID.out.0=输入P2P信息:
proghatches.eu.interface.waila.UUID.out.1= UUID: %1$s 
proghatches.eu.interface.waila.UUID.out.2= 坐标:[%2$d,%3$d,%4$d] 
proghatches.eu.interface.waila.UUID.out.3= 所在维度:%5$d
item.proghatch.cover.dedicated.3=忙碌检测覆盖版
item.proghatch.cover.dedicated.tooltips.3=0
item.proghatch.cover.dedicated.3.tooltips.5sec.true=保持信号5s
item.proghatch.cover.dedicated.3.tooltips.5sec.false=立刻熄灭信号
item.proghatch.cover.dedicated.3.tooltips.inputdetect.true=检测输入是否非空
item.proghatch.cover.dedicated.3.tooltips.inputdetect.false=忽略输入
proghatches.eu.interface.waila.V=电压:%dV
proghatches.eu.interface.waila.EA=期望电流:%dA
proghatches.eu.interface.waila.AA=采样电流/分配电流:%f/%dA
proghatches.eu.interface.waila.AAL=占总采样电流%f%%
proghatches.eu.source.waila.V=电压:%dV
proghatches.eu.source.waila.A=最大电流:%dA
proghatches.eu.source.waila.AC=提供电流:%dA
proghatches.eu.source.waila.AA=采样电流:%fA
proghatches.eu.interface.waila.inputmissing=无法定位输入端
proghatches.provider.waila=提供电路:
item.proghatch.cover.dedicated.tooltips.32=2
item.proghatch.cover.dedicated.tooltips.32.0=不含存储
item.proghatch.cover.dedicated.tooltips.32.1=覆盖版形式的接口 直接连接覆盖版所在面以连入ME网络
item.proghatch.cover.dedicated.32=ME接口覆盖板 (WIP)
item.proghatch.cover.dedicated.tooltips.33=2
item.proghatch.cover.dedicated.tooltips.33.0=不含存储
item.proghatch.cover.dedicated.tooltips.33.1=覆盖版形式的接口 直接连接覆盖版所在面以连入ME网络
item.proghatch.cover.dedicated.33=ME二合一接口覆盖板 (WIP)
item.proghatch.cover.dedicated.tooltips.34=3
item.proghatch.cover.dedicated.tooltips.34.0=不含存储
item.proghatch.cover.dedicated.tooltips.34.1=覆盖版形式的接口 直接连接覆盖版所在面以连入ME网络
item.proghatch.cover.dedicated.tooltips.34.2=使用内存卡右键以绑定 只能作为P2P输出端
item.proghatch.cover.dedicated.34=P2P - ME接口覆盖板 (WIP)
item.proghatch.cover.dedicated.tooltips.35=3
item.proghatch.cover.dedicated.tooltips.35.0=不含存储
item.proghatch.cover.dedicated.tooltips.35.1=覆盖版形式的接口 直接连接覆盖版所在面以连入ME网络
item.proghatch.cover.dedicated.tooltips.35.2=使用内存卡右键以绑定 只能作为P2P输出端
item.proghatch.cover.dedicated.35=P2P - ME二合一接口覆盖板 (WIP)
item.proghatch.cover.dedicated.tooltips.36=4
item.proghatch.cover.dedicated.tooltips.36.0=不含存储
item.proghatch.cover.dedicated.tooltips.36.1=覆盖版形式的接口 直接连接覆盖版所在面以连入ME网络
item.proghatch.cover.dedicated.tooltips.36.2=使用内存卡右键以绑定 只能作为P2P输出端
item.proghatch.cover.dedicated.tooltips.36.3=集成忙碌检测覆盖版功能 不按shift右键以配置忙碌检测
item.proghatch.cover.dedicated.36=P2P - EU接口覆盖板 (WIP)
programmable_hatches.cover.ae.worksensitive.false=忙碌检测:OFF
programmable_hatches.cover.ae.worksensitive.true=忙碌检测:ON
programmable_hatches.cover.ae.delay.false=立刻熄灭信号
programmable_hatches.cover.ae.delay.true=保持信号5s
programmable_hatches.cover.ae.inputdetect.false=忽略输入
programmable_hatches.cover.ae.inputdetect.true=检测输入是否非空
programmable_hatches.cover.ae.configure=配置忙碌检测
programmable_hatches.cover.ae.memorycard=不能作为P2P输入
proghatches.eu.interface.hint.amp.local=瞬时/采样/已分配到电流(仅此P2P)
proghatches.eu.interface.hint.input=P2P输入端配置
proghatches.eu.interface.hint.input.title=P2P输出端 只读
item.proghatch.cover.dedicated.37=ME覆盖板 (WIP)
item.proghatch.cover.dedicated.tooltips.37=3
item.proghatch.cover.dedicated.tooltips.37.0=允许ME频道直接穿透仓室
item.proghatch.cover.dedicated.tooltips.37.1=将所有仓室上的覆盖版连入同一个ME网络
item.proghatch.cover.dedicated.tooltips.37.2=最多传递8个频道
buffer.ingredientbuffer.name.0=原材料缓存仓 (T0)
buffer.ingredientbuffer.name.1=原材料缓存仓 (T1)
proghatches.provider.waila.disabled=作为多方块结构成型时无法连入ME网络
GT5U.gui.text.proghatches.largepcp.running=正在提供编程器电路合成
multimachine.largeprogrammingcircuitprovider.name=大型编程器电路提供器(WIP)
providerchainer.name=提供器访问仓
GT5U.gui.text.proghatch.access_loop=检测到环 请检查提供器访问仓的连接
proghatches.largepcp.eu=仓室个数:%1$s 功率:%2$s EU/t
programmable_hatches.gt.fluidlimit.0=限制同种类流体进入不同的流体槽
programmable_hatches.gt.fluidlimit.1=关闭后流入的流体会按槽位大小顺序依次试图填充流体槽
item.prog_toolkit.legacywarning.0=这里会生产旧版编程器电路
item.prog_toolkit.legacywarning.1=不推荐继续使用它,你应该使用新编程电路重新写样板
item.prog_toolkit.legacywarning.2=用螺丝刀右键提供器也可以切换到兼容模式(生成旧版电路)
item.prog_toolkit.legacywarning.3=旧版兼容会在将来的版本中被移除
item.prog_circuit.legacy=旧版
programmable_hatches.gt.insertion=打开插入窗口
programmable_hatches.gt.insertion.tooltip.0=把物品放入这里以插入输入区
programmable_hatches.gt.insertion.tooltip.1=这里的物品插入不受最大堆叠限制,最多堆叠至%s
programmable_hatches.gt.insertion.tooltip.2=ME接口同样也不受最大堆叠限制
programmable_hatches.gt.insertion.tooltip.3=警告!关闭这个窗口会丢出剩下的物品
programmable_hatches.gt.insertion.tooltip=4
